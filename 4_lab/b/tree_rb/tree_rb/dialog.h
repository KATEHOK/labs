#pragma once

/*
* Выводит список действий и запрашивает действие
* Параметры:
* (char*) pQuestion - вопрос к пользователю;
* (char**) ppArray - массив вариантов действий;
* (int) len - длина массива.
* Вернет:
* -1 - конец файла;
* 0 - выход;
* >0 - действие.
*/
int console(char*, char**, int);

/*
* Запрашивает ввод ключа и данных, добавляет новый элемент в дерево:
* (Tree*) pTree - указатель на дерево.
* Вернет:
* 0 - успех (печатает сообщение);
* 1 - произошла критическая ошибка.
*/
int dInsert(Tree* pTree);

/*
* Запрашивает ключ и удаляет соответствующий узел:
* (Tree*) pTree - указатель на дерево.
* Вернет:
* 0 - узел успешно удален или не найден;
* 1 - ошибка ввода (конец файла).
*/
int dDeleteNode(Tree* pTree);

/*
* Запрашивает ключ и вызывает печать узла:
* (Tree*) pTree - указатель на дерево.
* Вернет:
* 0 - узел выведен или выведено сообщение об отсутствии пары ключ-версия;
* 1 - ошибка ввода (конец файла).
*/
int dPrintNode(Tree* pTree);

/*
* Запрашивает подтверждение и вызывает удаление дерева:
* (Tree*) pTree - указатель на дерево.
* Вернет:
* 0 - удаление прошло успешно или передана ошибочная структура (выводит сообщение);
* 1 - ошибка ввода (конец файла);
* 2 - отмена удаления.
*/
int dDelete(Tree* pTree);

/*
* Запрашивает имя текстового файла и вызывает загрузку из него дерева.
* Вернет:
* 0 - файл успешно открыт;
* NULL - ошибка ввода (конец файла) или файл не был открыт.
*/
Tree* dDownload();

/*
* Вызывает инициализацию таблицы.
* Вернет:
* NULL - отказ в выделении памяти (выводит сообщение);
* (Tree*) - указатель на новое дерево (выводит сообщение).
*/
Tree* dInit();

/*
* Запрашивает ключ и вызывает обход дерева:
* (Tree*) pTree - указатель на дерево.
* Вернет:
* 0 - обход успешно завершен;
* 1 - ошибка ввода (конец файла).
*/
int dWalk(Tree* pTree);

/*
* Запрашивает ключ и версию, вызывает специальный поиск и вызывает печать узла:
* (Tree*) pTree - указатель на дерево.
* Вернет:
* 0 - узел выведен или выведено сообщение об отсутствии пары ключ-версия;
* 1 - ошибка ввода (конец файла).
*/
int dSearchSpecial(Tree* pTree);

/*
* Обрабатывает возможные действия с таблицей:
* (Tree*) pTree - указатель на дерево.
* Вернет:
* 0 - таблица корректно закрыта;
* 1 - критическая ошибка, необходимо экстренно завершить выполнение программы.
*/
int dProcess(Tree* pTree);